{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Kuid is a system that act as a generic resource identity and inventory system using CRD(s)</p>"},{"location":"#architecture","title":"Architecture","text":""},{"location":"#why","title":"Why?","text":""},{"location":"#join-us","title":"Join us","text":"<p>Have questions, ideas, bug reports or just want to chat? Come join our discord server.</p>"},{"location":"02-resources/01_about/","title":"Resource introduction","text":"<p>Kuid is a system that aims to manage resources in an organization </p> <ul> <li>tries to retaina. central view of </li> <li>hierarchical: through indices (overlapping identifiers)</li> <li>delegation: </li> <li>event driven</li> </ul>"},{"location":"02-resources/ipam/01_ipam_about/","title":"IPAM resource","text":"<p>The IP Address Management (IPAM) system comprises of multiple network instances, each housing nested prefixes to facilitate collaboration across teams and environments while maintaining a clear overview of IP usage. Each NetworkInstance manages IP resources, including IP prefixes and ranges, with the top prefix termed as an aggregated prefix. IP resources can be claimed statically or dynamically within a NetworkInstance, utilizing specified or unspecified IP addresses/prefixes. Overlapping IP resources are managed effectively by instantiating multiple network instances. IP resources are further subdivided using IP Prefixes and IP Ranges, with management facilitated through VLANClaim CRD. The system supports various IPClaim types, including static and dynamic allocations for prefixes, addresses, and ranges.\"</p> <p>IPCLAIM types: - static IP Prefix - static IP Address - static IP Range - dynamic IP Prefix - static IP Prefix</p> <p>The below diagram show the hierarchy in which ip resources are managed.</p> <pre><code>---\ntitle: VLAN index\n---\nflowchart TD\n    i[NetworkInstance] --&gt; a[IP Prefix Aggregate]\n    a[IP Prefix Aggregate] --&gt; pn[IP Prefix Network]\n    a[IP Prefix Aggregate] --&gt; pp[IP Prefix Pool]\n    a[IP Prefix Aggregate] --&gt; po[IP Prefix other]\n    pn[IP Prefix Network]--&gt; pnr[IP Range]\n    pn[IP Prefix Network]--&gt; pna[IP Address]\n    pp[IP Prefix Pool]--&gt; ppr[IP Range]\n    pp[IP Prefix Pool] --&gt; ppa[IP Address]\n    po[IP Prefix Other] --&gt; po[IP Prefix Other]\n    po[IP Prefix Other] --&gt; pn[IP Prefix Network]\n    po[IP Prefix Other] --&gt; pp[IP Prefix Pool]\n    po[IP Prefix Other]--&gt; por[IP Range]\n    pnr[IP Range] --&gt; pnra[IP Address]\n    ppr[IP Range] --&gt; ppra[IP Address]\n    por[IP Range] --&gt; pora[IP Address]\n\n</code></pre> <p>The IPAM resources are managed in a persistent storage and upon restart or reboot of the system the resources are restored.</p>"},{"location":"02-resources/ipam/02_ipam_networkinstance/","title":"Network Instance","text":"<p>IP resources are managed through a <code>NetworkInstance</code> CR. A <code>NetworkInstance</code> holds a routing table context in which the ip resources are managed. Both IPV4 and IPv6 addresses are supported within a network instance. The aggregate prefixes within a netowrk instance are defined when creating/updating the networkInstamce. A single Aggregate Prefix is required otherwise the networkInstance will not turn its status to ready</p>"},{"location":"02-resources/ipam/02_ipam_networkinstance/#example","title":"Example","text":"<p>A NetworkInstance is managed through the <code>NetworkInstance</code> CRD. A single prefix is required to get the network instance ready status</p> <pre><code>apiVersion: ipam.res.kuid.dev/v1alpha1\nkind: NetworkInstance\nmetadata:\nname: vpc1\nspec:\nprefixes:\n- prefix: 10.0.0.0/8\n- prefix: 172.0.0.0/8\n</code></pre>"},{"location":"02-resources/ipam/02_ipam_networkinstance/#status","title":"Status","text":"<p>The status of the NetworkInstance is indicated using the READY condition. A True Ready condition indicates the NetworkInstance was successfull claimed in the system. When the Ready condition status is False the reason and message information in the status provide additional information.</p> <pre><code>kubectl get vlanindices.vlan.be.kuid.dev \n</code></pre> <p>status</p> <pre><code>NAME     READY\nindex1   True\n</code></pre>"},{"location":"02-resources/ipam/03_ipam_ipprefix_static/","title":"IP Prefix","text":""},{"location":"02-resources/ipam/03_ipam_ipprefix_static/#example","title":"Example","text":"<p>A NetworkInstance is managed through the <code>NetworkInstance</code> CRD. A single prefix is required to get the network instance ready status</p> <pre><code>apiVersion: ipam.be.kuid.dev/v1alpha1\nkind: IPClaim\nmetadata:\nname: vpc1.10.0.0.1-24\nspec:\nnetworkInstance: vpc1\nprefix: 10.0.0.0/16\nlabels:\ninv.kuid.dev/network: net1\n</code></pre> <pre><code>apiVersion: ipam.be.kuid.dev/v1alpha1\nkind: IPClaim\nmetadata:\nname: vpc1.10.0.0.1-24\nspec:\nnetworkInstance: vpc1\nprefixType: network\nprefix: 10.0.0.1/24\ndefaultGateway: true\nlabels:\ninv.kuid.dev/network: net1\n</code></pre>"},{"location":"02-resources/ipam/03_ipam_ipprefix_static/#status","title":"Status","text":"<p>The status of the NetworkInstance is indicated using the READY condition. A True Ready condition indicates the NetworkInstance was successfull claimed in the system. When the Ready condition status is False the reason and message information in the status provide additional information.</p> <pre><code>kubectl get vlanindices.vlan.be.kuid.dev \n</code></pre> <p>status</p> <pre><code>NAME     READY\nindex1   True\n</code></pre>"},{"location":"02-resources/ipam/04_ipam_ipprefix_dynamic/","title":"IP Prefix","text":""},{"location":"02-resources/ipam/04_ipam_ipprefix_dynamic/#example","title":"Example","text":"<p>A NetworkInstance is managed through the <code>NetworkInstance</code> CRD. A single prefix is required to get the network instance ready status</p> <pre><code>apiVersion: ipam.be.kuid.dev/v1alpha1\nkind: IPClaim\nmetadata:\nname: vpc1.10.0.0.1-24\nspec:\nnetworkInstance: vpc1\nprefix: 10.0.0.0/16\nlabels:\ninv.kuid.dev/network: net1\n</code></pre> <pre><code>apiVersion: ipam.be.kuid.dev/v1alpha1\nkind: IPClaim\nmetadata:\nname: vpc1.10.0.0.1-24\nspec:\nnetworkInstance: vpc1\nprefixType: network\nprefix: 10.0.0.1/24\ndefaultGateway: true\nlabels:\ninv.kuid.dev/network: net1\n</code></pre>"},{"location":"02-resources/ipam/04_ipam_ipprefix_dynamic/#status","title":"Status","text":"<p>The status of the NetworkInstance is indicated using the READY condition. A True Ready condition indicates the NetworkInstance was successfull claimed in the system. When the Ready condition status is False the reason and message information in the status provide additional information.</p> <pre><code>kubectl get vlanindices.vlan.be.kuid.dev \n</code></pre> <p>status</p> <pre><code>NAME     READY\nindex1   True\n</code></pre>"},{"location":"02-resources/ipam/05_ipam_ipaddress/","title":"IP Range","text":""},{"location":"02-resources/ipam/05_ipam_ipaddress/#example","title":"Example","text":"<p>A NetworkInstance is managed through the <code>NetworkInstance</code> CRD. A single prefix is required to get the network instance ready status</p> <pre><code>apiVersion: ipam.be.kuid.dev/v1alpha1\nkind: IPClaim\nmetadata:\nname: vpc1.10.0.0.10-32\nspec:\nnetworkInstance: vpc1\naddress: 10.0.0.10/32\n</code></pre>"},{"location":"02-resources/ipam/05_ipam_ipaddress/#status","title":"Status","text":"<p>The status of the NetworkInstance is indicated using the READY condition. A True Ready condition indicates the NetworkInstance was successfull claimed in the system. When the Ready condition status is False the reason and message information in the status provide additional information.</p> <pre><code>kubectl get vlanindices.vlan.be.kuid.dev \n</code></pre> <p>status</p> <pre><code>NAME     READY\nindex1   True\n</code></pre>"},{"location":"02-resources/ipam/06_ipam_ipaddress_dynamic/","title":"IP Range","text":""},{"location":"02-resources/ipam/06_ipam_ipaddress_dynamic/#example","title":"Example","text":"<p>A NetworkInstance is managed through the <code>NetworkInstance</code> CRD. A single prefix is required to get the network instance ready status</p> <pre><code>apiVersion: ipam.be.kuid.dev/v1alpha1\nkind: IPClaim\nmetadata:\nname: vpc1.10.0.0.10-32\nspec:\nnetworkInstance: vpc1\naddress: 10.0.0.10/32\n</code></pre>"},{"location":"02-resources/ipam/06_ipam_ipaddress_dynamic/#status","title":"Status","text":"<p>The status of the NetworkInstance is indicated using the READY condition. A True Ready condition indicates the NetworkInstance was successfull claimed in the system. When the Ready condition status is False the reason and message information in the status provide additional information.</p> <pre><code>kubectl get vlanindices.vlan.be.kuid.dev \n</code></pre> <p>status</p> <pre><code>NAME     READY\nindex1   True\n</code></pre>"},{"location":"02-resources/ipam/07_ipam_ipaddress_static/","title":"IP Range","text":""},{"location":"02-resources/ipam/07_ipam_ipaddress_static/#example","title":"Example","text":"<p>A NetworkInstance is managed through the <code>NetworkInstance</code> CRD. A single prefix is required to get the network instance ready status</p> <pre><code>apiVersion: ipam.be.kuid.dev/v1alpha1\nkind: IPClaim\nmetadata:\nname: vpc1.10.0.0.10-32\nspec:\nnetworkInstance: vpc1\naddress: 10.0.0.10/32\n</code></pre>"},{"location":"02-resources/ipam/07_ipam_ipaddress_static/#status","title":"Status","text":"<p>The status of the NetworkInstance is indicated using the READY condition. A True Ready condition indicates the NetworkInstance was successfull claimed in the system. When the Ready condition status is False the reason and message information in the status provide additional information.</p> <pre><code>kubectl get vlanindices.vlan.be.kuid.dev \n</code></pre> <p>status</p> <pre><code>NAME     READY\nindex1   True\n</code></pre>"},{"location":"02-resources/ipam/08_ipam_ipentry/","title":"IP Range","text":""},{"location":"02-resources/ipam/08_ipam_ipentry/#example","title":"Example","text":"<p>A NetworkInstance is managed through the <code>NetworkInstance</code> CRD. A single prefix is required to get the network instance ready status</p> <pre><code>apiVersion: ipam.be.kuid.dev/v1alpha1\nkind: IPClaim\nmetadata:\nname: vpc1.10.0.0.10-32\nspec:\nnetworkInstance: vpc1\naddress: 10.0.0.10/32\n</code></pre>"},{"location":"02-resources/ipam/08_ipam_ipentry/#status","title":"Status","text":"<p>The status of the NetworkInstance is indicated using the READY condition. A True Ready condition indicates the NetworkInstance was successfull claimed in the system. When the Ready condition status is False the reason and message information in the status provide additional information.</p> <pre><code>kubectl get vlanindices.vlan.be.kuid.dev \n</code></pre> <p>status</p> <pre><code>NAME     READY\nindex1   True\n</code></pre>"},{"location":"02-resources/vlan/01_vlan_about/","title":"VLAN","text":"<p>Kuid implements VLAN management according to IEEE 802.1Q and related standards, ensuring adherence to industry best practices.</p>"},{"location":"02-resources/vlan/01_vlan_about/#vlan-index","title":"VLAN Index","text":"<p>A VLAN Index serves as a container for VLANs, defining a specific scope for their management. Each VLAN Index can be associated with a site, rack, interface, or similar entity, providing clarity on its intended scope. Within a VLAN Index, a designated minimum and maximum VLAN ID are defined, typically set to the standard values of 1 and 4094, respectively.</p> <p>Each VLAN within an index must possess a unique ID and name, facilitating clear identification and organization. </p>"},{"location":"02-resources/vlan/01_vlan_about/#vlan-range","title":"VLAN Range","text":"<p>To enable more granular VLAN management, Kuid supports the subdivision of VLAN Indexes into ranges. This feature enhances the flexibility and scalability of VLAN configurations, accommodating diverse network environments and requirements.</p>"},{"location":"02-resources/vlan/01_vlan_about/#vlan_1","title":"VLAN","text":"<p>In Kuid, VLANs are modeled in accordance with IEEE 802.1Q standards, utilizing a 12-bit VLAN ID and associated name. Additionally, each VLAN is endowed with an operational status (implemented using conditions), ensuring visibility into its current state and functionality. VLANs are logically organized within VLAN Indexes and may optionally be assigned to specific VLAN ranges, further enhancing the flexibility and organization of network configurations.</p> <p>The below diagram show the hierarchy in which VLAN IDs are managed.</p> <pre><code>---\ntitle: VLAN Management Hierarchy\ntheme: neutral\n---\nflowchart TD\n    i[VLAN Index] --&gt; r[VLAN Range]\n    i[VLAN Index] --&gt; vi[VLAN]\n    r[VLAN Range] --&gt; vr[VLAN]</code></pre>"},{"location":"02-resources/vlan/02_vlan_index/","title":"VLAN Index","text":"<p>A <code>VLANIndex</code> serves as a container for VLANs, defining a specific scope for their management. Each <code>VLANIndex</code> can be associated with a site, rack, interface, or similar entity, providing clarity on its intended scope. Within a <code>VLANIndex</code>, a designated minimum and maximum VLAN ID are defined, typically set to the standard values of 1 and 4094, respectively. Each VLAN within an index must possess a unique ID and name, facilitating clear identification and organization. </p>"},{"location":"02-resources/vlan/02_vlan_index/#example","title":"Example","text":"<p>A VLAN Index is managed through the <code>VLANIndex</code> Custom Resource Definition (CRD). Below is an example YAML manifest demonstrating the configuration of a VLAN Index named \"index1\":</p> <pre><code>apiVersion: vlan.be.kuid.dev/v1alpha1\nkind: VLANIndex\nmetadata:\nname: index1\nspec:\nlabels:\ninv.kuid.dev/site: us-west-1 </code></pre>"},{"location":"02-resources/vlan/02_vlan_index/#status","title":"Status","text":"<p>he status of the <code>VLANIndex</code> is indicated using the READY condition. A True Ready condition indicates the VLANIndex was successful. When the Ready condition status is False, the reason and message information in the status provide additional details.</p> <pre><code>kubectl get vlanindices.vlan.be.kuid.dev \n</code></pre> <p>status</p> <pre><code>NAME     READY\nindex1   True\n</code></pre> <p>Upon successful creation of the VLAN Index \"index1,\" the status should indicate a True Ready condition, confirming that the VLAN Index has been successfully provisioned.</p>"},{"location":"02-resources/vlan/02_vlan_index/#expected-behavior","title":"Expected behavior","text":"<p>Upon successful creation of the <code>VLANIndex</code> \"index1,\" the status should indicate a True Ready condition, confirming that the VLAN Index has been successfully provisioned.</p>"},{"location":"02-resources/vlan/03_vlan_range/","title":"VLAN Range","text":"<p>Kuid supports the subdivision of VLAN Indexes into ranges, enhancing the flexibility and scalability of VLAN configurations to accommodate diverse network environments and requirements.</p>"},{"location":"02-resources/vlan/03_vlan_range/#example","title":"Example","text":"<p>A VLAN range is managed through the <code>VLANClaim</code> Custom Resource (CR), requiring specific parameters such as the VLAN index from which the VLAN is claimed and the start and end VLAN identifiers of the range. Below is an example YAML manifest demonstrating the configuration of a VLAN range claim:</p> <pre><code>apiVersion: vlan.be.kuid.dev/v1alpha1\nkind: VLANClaim\nmetadata:\nname: range-claim\nspec:\nindex: index1\nrange: 200-399\n</code></pre>"},{"location":"02-resources/vlan/03_vlan_range/#status","title":"Status","text":"<p>The status of the <code>VLANClaim</code> is indicated using the READY condition. A True Ready condition indicates a successful VLAN range claim in the system. The claimed VLAN range is also displayed in the status.</p> <pre><code>kubectl get vlanclaims.vlan.be.kuid.dev static-claim\n</code></pre> <pre><code>NAME            READY   INDEX    CLAIMTYPE      CLAIMREQ   CLAIMRSP\nrange-claim     True    index1   vlanRange       200-399    200-399\n</code></pre> <p>If a <code>VLANClaim</code> is unsuccessful, the condition will indicate the reason for the failure. For example, a <code>VLANClaim</code> cannot overlap with existing entries.</p>"},{"location":"02-resources/vlan/03_vlan_range/#status_1","title":"Status","text":"<p>Upon successful creation of the VLAN range claim, the status should indicate a True Ready condition, confirming that the VLAN range has been successfully claimed in the system.</p>"},{"location":"02-resources/vlan/04_vlan/","title":"VLAN","text":"<p>In Kuid, VLANs are managed according to IEEE 802.1Q standards, ensuring adherence to industry best practices for network segmentation and organization. VLANs are logically organized within VLAN Indexes, providing a structured framework for VLAN management.</p>"},{"location":"02-resources/vlan/04_vlan/#static-vlan","title":"Static VLAN","text":"<p>Static VLANs are explicitly defined with a specific VLAN ID and are managed through the VLANClaim Custom Resource (CR). Each static VLAN is associated with a VLAN index and a unique VLAN ID. If a static VLAN is defined within a VLAN Range it is associated to the VLAN Range within the VLAN Indez. Below is an example of static VLAN configurations:</p>"},{"location":"02-resources/vlan/04_vlan/#example-static-vlan","title":"Example static VLAN","text":"<p>A static VLAN is configured by specifying the VLAN index and the static VLAN ID in the <code>VLANClaim</code> CR:</p> <pre><code>apiVersion: vlan.be.kuid.dev/v1alpha1\nkind: VLANClaim\nmetadata:\nname: static-claim\nspec:\nindex: index1\nid: 100\n</code></pre>"},{"location":"02-resources/vlan/04_vlan/#expected-behavior","title":"Expected behavior","text":"<p>Upon successful creation of the static <code>VLANClaim</code> \"static-claim,\" the status should indicate a True Ready condition, confirming that the VLAN has been successfully claimed with the specified VLAN ID.</p>"},{"location":"02-resources/vlan/04_vlan/#dynamic-vlan","title":"Dynamic VLAN","text":"<p>Dynamic VLANs are automatically assigned VLAN IDs by the system and are managed through the <code>VLANClaim</code> CR without specifying a VLAN ID. Optionally, dynamic VLANs can be restricted to specific VLAN ranges using label selectors. Below are examples of dynamic VLAN configurations:</p>"},{"location":"02-resources/vlan/04_vlan/#example-dynamic-vlan","title":"Example dynamic VLAN","text":"<p>A dynamic VLAN is configured by specifying only the VLAN index in the <code>VLANClaim</code> CR:</p> <pre><code>apiVersion: vlan.be.kuid.dev/v1alpha1\nkind: VLANClaim\nmetadata:\nname: dynamic-claim\nspec:\nindex: index1\n</code></pre>"},{"location":"02-resources/vlan/04_vlan/#example-dynamic-vlan-within-a-range","title":"Example dynamic VLAN within a range","text":"<p>A dynamic VLAN can be restricted to a specific VLAN range using label selectors in the <code>VLANClaim</code> CR:</p> <pre><code>apiVersion: vlan.be.kuid.dev/v1alpha1\nkind: VLANClaim\nmetadata:\nname: dynamic-claim\nspec:\nindex: index1\nselector:\nmatchLabels:\nbe.kuid.dev/claim-name: range1\n</code></pre>"},{"location":"02-resources/vlan/04_vlan/#expected-behavior_1","title":"Expected behavior","text":"<p>Upon successful creation of the dynamic <code>VLANClaim</code>, the status should indicate a True Ready condition, confirming that the VLAN has been successfully claimed with an automatically assigned VLAN ID.</p>"},{"location":"02-resources/vlan/04_vlan/#status","title":"Status","text":"<p>The status of VLANClaims is indicated using the READY condition. A True Ready condition indicates a successful VLANClaim. When the Ready condition status is False, the reason and message information in the status provide additional details.</p> <pre><code>kubectl get vlanclaims.vlan.be.kuid.dev --all\n</code></pre> <p>status static claim</p> <pre><code>NAME           READY   INDEX    CLAIMTYPE      CLAIMREQ   CLAIMRSP\nstatic-claim   True    index1   staticVLANID   100        100\n</code></pre> <p>statuc dynamic claim</p> <pre><code>NAME            READY   INDEX    CLAIMTYPE      CLAIMREQ   CLAIMRSP\ndynamic-claim   True    index1   dynamicVLANID              2\n</code></pre>"},{"location":"02-resources/vlan/05_vlan_entry/","title":"VLAN Entry","text":"<p><code>VLAN Entries</code> in Kuid represent the entries stored in the backend system, providing valuable insights into the state of VLAN configurations. They serve as a key component for troubleshooting and validating the proper behavior of the system.</p> <p>Given that VLAN Entries are managed as Kubernetes resources, they can be queried programmatically to assess system health or perform specific tasks based on their contents.</p>"},{"location":"02-resources/vlan/05_vlan_entry/#example-output","title":"Example Output","text":"<p>The following example output illustrates the structure and contents of VLAN Entries:</p> <pre><code>k get vlanentries.vlan.be.kuid.dev\n</code></pre> <p>output</p> <pre><code>NAME                        READY   INDEX    CLAIMTYPE       VLANID\nindex1.100-32               True    index1   staticVLANID    100/32\nindex1.200-29               True    index1   vlanRange       200/29\nindex1.208-28               True    index1   vlanRange       208/28\nindex1.224-27               True    index1   vlanRange       224/27\nindex1.256-25               True    index1   vlanRange       256/25\nindex1.384-28               True    index1   vlanRange       384/28\nindex1.range-claim.200-32   True    index1   staticVLANID    200/32\nindex1.range-claim.201-32   True    index1   dynamicVLANID   201/32\nindex1.range-claim.202-32   True    index1   dynamicVLANID   202/32\n</code></pre>"}]}